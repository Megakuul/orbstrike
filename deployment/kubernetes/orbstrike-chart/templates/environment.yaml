{{- $relName := .Release.Name }}
{{- $relNs := .Release.Namespace }}

# Cache Database
apiVersion: v1
kind: Secret
metadata:
  name: cache-db-env-{{ $relName }}
  namespace: {{ $relNs }}
stringData:
  tls-cert: "{{ .Values.cacheDBCert }}"
  tls-key: "{{ .Values.cacheDBKey }}"
  tls-ca: "{{ .Values.cacheDBCa }}"
  acl-file: |
    {{- .Values.cacheDBAcl | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cache-db-conf-{{ $relName }}
  namespace: {{ $relNs }}
data:
  redis.conf: |
    cluster-enabled yes
    cluster-node-timeout {{ .Values.cacheDBNodeTimeout }}
    appendonly yes
    auto-aof-rewrite-percentage {{ .Values.cacheDBAofRewritePercentage }}
    auto-aof-rewrite-min-size {{ .Values.cacheDBAofRewriteMinSize }}
    maxmemory {{ .Values.cacheDBMaxMemory }}
    maxmemory-policy allkeys-lru
    aclfile /etc/redis/conf/acl-file
    {{- if .Values.cacheDBEnableTLS }}
    tls-cert-file /etc/redis/conf/tls-cert
    tls-key-file /etc/redis/conf/tls-key
    tls-ca-cert-file /etc/redis/conf/tls-ca
    {{- end }}
    dir /data
    appendfilename appendonly.aof
---
# Orchestrator
apiVersion: v1
kind: Secret
metadata:
  name: orchestrator-env-{{ $relName }}
  namespace: {{ $relNs }}
stringData:
  PORT: "{{ .Values.orchestratorPort }}"
  TIMEOUTMIN: "{{ .Values.orchestratorTimeoutMin }}"
  SECRET: "{{ .Values.appSecret }}"
  LOGFILE: "{{ .Values.orchestratorLogFile }}"
  LOGOPTIONS: "{{ .Values.orchestratorLogOptions }}"
  MAXLOGSIZEKB: "{{ .Values.orchestratorMaxLogSizeKB }}"
  LOGSTDOUT: "{{ .Values.orchestratorLogStdout }}"
  BASE64_SSL_CERTIFICATE: "{{ .Values.orchestratorCert }}"
  BASE64_SSL_PRIVATEKEY: "{{ .Values.orchestratorKey }}"
  BASE64_SSL_CA: "{{ .Values.orchestratorCa }}"
  DBSHARDNODES: "{{- range .Values.appCacheShard }}cache-db-set-{{ $relName }}-{{ . }}.cache-db-svc-{{ $relName }}.{{ $relNs }}.svc.cluster.local:6379,{{- end }}"
  DBUSERNAME: "{{ .Values.appCacheUsername }}"
  DBPASSWORD: "{{ .Values.appCachePassword }}"
  DB_BASE64_SSL_CERTIFICATE: {{ .Values.cacheDBCert }}
  DB_BASE64_SSL_PRIVATEKEY: {{ .Values.cacheDBKey }}
  DB_BASE64_SSL_CA: {{ .Values.cacheDBCa }}
  GAMESERVER_BASE64_SSL_CA: {{ .Values.serverCa }}
  FOCONTROLLERDOWNTIMETHRESHOLDMS: "{{ .Values.orchestratorDowntimeThresholdms }}"
  FAILOVERINTERVALMS: "{{ .Values.orchestratorFailoverInterval }}"
  GAMELIFETIMEMIN: "{{ .Values.appGameLifeTimeMin }}"
  GAMEJOINTIMEOUTSEC: "{{ .Values.appGameJoinTimeoutSec }}"
  DAILYUSERGAMELIMIT: "{{ .Values.appDailyUserGameLimit }}"
---
# Game Server
apiVersion: v1
kind: Secret
metadata:
  name: server-env-{{ $relName }} 
  namespace: {{ $relNs }}
stringData:
  PORT: "{{ .Values.serverPort }}"
  ADDR: ""
  HOSTNAMESUFFIX: ".server-svc-{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local"
  SECRET: "{{ .Values.appSecret }}"
  LOGFILE: "{{ .Values.serverLogFile }}"
  LOGOPTIONS: "{{ .Values.serverLogOptions }}"
  MAXLOGSIZEKB: "{{ .Values.serverMaxLogSizeKB }}"
  LOGSTDOUT: "{{ .Values.serverLogStdout }}"
  BASE64_SSL_CERTIFICATE: "{{ .Values.serverCert }}"
  BASE64_SSL_PRIVATEKEY: "{{ .Values.serverKey }}"
  BASE64_SSL_CA: "{{ .Values.serverCa }}"
  DBSHARDNODES: "{{- range .Values.appCacheShard }}cache-db-set-{{ $relName }}-{{ . }}.cache-db-svc-{{ $relName }}.{{ $relNs }}.svc.cluster.local:6379,{{- end }}"
  DBUSERNAME: "{{ .Values.appCacheUsername }}"
  DBPASSWORD: "{{ .Values.appCachePassword }}"
  DB_BASE64_SSL_CERTIFICATE: {{ .Values.cacheDBCert }}
  DB_BASE64_SSL_PRIVATEKEY: {{ .Values.cacheDBKey }}
  DB_BASE64_SSL_CA: {{ .Values.cacheDBCa }}
  MAXCHANNELSIZE: "{{ .Values.serverMaxChanSize }}"
  REQUESTPERWORKER: "{{ .Values.serverReqPerWorker }}"
  SYNCINTERVALMS: "{{ .Values.serverSyncIntervalms }}"
  DOWNTIMETHRESHOLDMS: "{{ .Values.serverDowntimeThresholdms }}"
  GAMEOVERMESSAGE: "{{ .Values.appGameOverMessage }}"
  RESPONSEINTERVALMS: "{{ .Values.appResponseIntervalms }}"
