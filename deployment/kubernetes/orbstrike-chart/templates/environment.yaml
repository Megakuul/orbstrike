{{- $relName := .Release.Name }}
{{- $relNs := .Release.Namespace }}

# Cache Database
apiVersion: v1
kind: Secret
metadata:
  name: cache-db-env-{{ $relName }}
  namespace: {{ $relNs }}
stringData:
  tls-cert: "{{ .Values.cacheDBCert }}"
  tls-key: "{{ .Values.cacheDBKey }}"
  tls-ca: "{{ .Values.cacheDBCa }}"
  acl-file: |
    {{- .Values.cacheDBAcl | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cache-db-conf-{{ $relName }}
  namespace: {{ $relNs }}
data:
  redis.conf: |
    cluster-enabled yes
    cluster-node-timeout {{ .Values.cacheDBNodeTimeout }}
    appendonly yes
    auto-aof-rewrite-percentage {{ .Values.cacheDBAofRewritePercentage }}
    auto-aof-rewrite-min-size {{ .Values.cacheDBAofRewriteMinSize }}
    maxmemory {{ .Values.cacheDBMaxMemory }}
    maxmemory-policy allkeys-lru
    aclfile /etc/redis/conf/acl-file
    {{- if .Values.cacheDBEnableTLS }}
    tls-cert-file /etc/redis/conf/tls-cert
    tls-key-file /etc/redis/conf/tls-key
    tls-ca-cert-file /etc/redis/conf/tls-ca
    {{- end }}
    dir /data
    appendfilename appendonly.aof
---
# Orchestrator
apiVersion: v1
kind: Secret
metadata:
  name: orchestrator-env-{{ $relName }}
  namespace: {{ $relNs }}
stringData:
  port: "{{ .Values.orchestratorPort }}"
  timeoutmin: "{{ .Values.orchestratorTimeoutMin }}"
  secret: "{{ .Values.appSecret }}"
  logfile: "{{ .Values.orchestratorLogFile }}"
  logoptions: "{{ .Values.orchestratorLogOptions }}"
  maxlogsizekb: "{{ .Values.orchestratorMaxLogSizeKB }}"
  logstdout: "{{ .Values.orchestratorLogStdout }}"
  base64_ssl_certificate: "{{ .Values.orchestratorCert }}"
  base64_ssl_privatekey: "{{ .Values.orchestratorKey }}"
  base64_ssl_ca: "{{ .Values.orchestratorCa }}"
  dbshardnodes: |
    {{- range .Values.appCacheShard }}
    cache-db-set-{{ $relName }}-{{ . }}.cache-db-svc-{{ $relName }}.{{ $relNs }}.svc.cluster.local:6379,
    {{- end }}
  dbusername: "{{ .Values.appCacheUsername }}"
  dbpassword: "{{ .Values.appCachePassword }}"
  db_base64_ssl_certificate: {{ .Values.cacheDBCert }}
  db_base64_ssl_privatekey: {{ .Values.cacheDBKey }}
  db_base64_ssl_ca: {{ .Values.cacheDBCa }}
  gameserver_base64_ssl_ca: {{ .Values.serverCa }}
  focontrollerdowntimethresholdms: "{{ .Values.orchestratorDowntimeThresholdms }}"
  failoverintervalms: "{{ .Values.orchestratorFailoverInterval }}"
  gamelifetimemin: "{{ .Values.appGameLifeTimeMin }}"
  gamejointimeoutsec: "{{ .Values.appGameJoinTimeoutSec }}"
  dailyusergamelimit: "{{ .Values.appDailyUserGameLimit }}"
---
# Game Server
apiVersion: v1
kind: Secret
metadata:
  name: server-env-{{ $relName }} 
  namespace: {{ $relNs }}
stringData:
  port: "{{ .Values.serverPort }}"
  addr: ""
  hostnamesuffix: ".server-svc-{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local"
  secret: "{{ .Values.appSecret }}"
  logfile: "{{ .Values.serverLogFile }}"
  logoptions: "{{ .Values.serverLogOptions }}"
  maxlogsizekb: "{{ .Values.serverMaxLogSizeKB }}"
  logstdout: "{{ .Values.serverLogStdout }}"
  base64_ssl_certificate: "{{ .Values.serverCert }}"
  base64_ssl_privatekey: "{{ .Values.serverKey }}"
  base64_ssl_ca: "{{ .Values.serverCa }}"
  dbshardnodes: |
    {{- range .Values.appCacheShard }}
    cache-db-set-{{ $relName }}-{{ . }}.cache-db-svc-{{ $relName }}.{{ $relNs }}.svc.cluster.local:6379,
    {{- end }}
  dbusername: "{{ .Values.appCacheUsername }}"
  dbpassword: "{{ .Values.appCachePassword }}"
  db_base64_ssl_certificate: {{ .Values.cacheDBCert }}
  db_base64_ssl_privatekey: {{ .Values.cacheDBKey }}
  db_base64_ssl_ca: {{ .Values.cacheDBCa }}
  maxchannelsize: "{{ .Values.serverMaxChanSize }}"
  requestperworker: "{{ .Values.serverReqPerWorker }}"
  syncintervalms: "{{ .Values.serverSyncIntervalms }}"
  downtimethresholdms: "{{ .Values.serverDowntimeThresholdms }}"
  gameovermessage: "{{ .Values.appGameOverMessage }}"
  responseintervalms: "{{ .Values.appResponseIntervalms }}"
