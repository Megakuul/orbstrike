# This is an example config, those options can also be configured with ENV-Variables
port: 10187
# Defines the address to which the orchestrator will connect, when left on "" it will take the hostname instead, this is usually used with Container-Engines with built-in DNS support
addr: ""
# Shared secret required on both the Orchestrator and GameServers for validation, similar to a JWT Secret.
secret: "thismustatleastbe40randomcharsinprod"

logfile: "./debug.server.log"
logoptions: "ERROR|WARNING|INFORMATION"
maxlogsizekb: 200
logstdout: true

# Enter your certificate chain as base64 if you want an unencrypted TCP Socket use ""
base64_ssl_certificate: ""
base64_ssl_privatekey: ""
base64_ssl_ca: ""

# Foreach shard add one instance of the replication (best is to use the default master)
## dbshardnodes: "10.100.32.10:6379,10.100.32.20:6379"
dbshardnodes: "localhost:7001,localhost:7002,localhost:7003"

# Specify Redis username and password from ACL
dbusername: "u_orbstrike_api_rw"
dbpassword: "SuperSecret123"

# Enter your certificate chain as base64 if you want an unencrypted db connection use ""
db_base64_ssl_certificate: ""
db_base64_ssl_privatekey: ""
db_base64_ssl_ca: ""

# Defines how much requests can be in a respond channel
maxchannelsize: 10
# Defines how much requests are processed synchron per worker
requestperworker: 15
# Defines the interval in which responses are sent to the clients (do not use 0 as this would execute as fast as possible, what makes the speed of players based on the speed of the instance)
responseintervalms: 10
# Defines the interval in which game is synchronized with the database
syncintervalms: 1000
# Defines the offline-threshold until the orchestrator will panic and reallocate the games
downtimethresholdms: 5000

# List seperated by '|' containing messages displayed when players are removed from the game
gameovermessages: "Game Over|Wasted"
